// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrenRezervasyonAPI.Model;

#nullable disable

namespace TrenRezervasyonAPI.Migrations
{
    [DbContext(typeof(RezervasyonDBContext))]
    partial class RezervasyonDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrenRezervasyonAPI.Model.OturmaPlani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KisiSayisi")
                        .HasColumnType("int");

                    b.Property<int?>("RezervasyonCevabiId")
                        .HasColumnType("int");

                    b.Property<string>("VagonAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RezervasyonCevabiId");

                    b.ToTable("Oturmaplanlari");
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.RezervasyonCevabi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("RezervasyonOnayi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RezervasyonCevaplari");
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.Tren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tren");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Başkent"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İzmir"
                        });
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.Vagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoluKoltukAdet")
                        .HasColumnType("int");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrenId");

                    b.ToTable("Vagonlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoluKoltukAdet = 35,
                            Kapasite = 80,
                            Name = "BaşkentV1",
                            TrenId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoluKoltukAdet = 40,
                            Kapasite = 100,
                            Name = "BaşkentV2",
                            TrenId = 1
                        },
                        new
                        {
                            Id = 3,
                            DoluKoltukAdet = 55,
                            Kapasite = 60,
                            Name = "BaşkentV3",
                            TrenId = 1
                        },
                        new
                        {
                            Id = 4,
                            DoluKoltukAdet = 30,
                            Kapasite = 70,
                            Name = "İzmirV1",
                            TrenId = 2
                        },
                        new
                        {
                            Id = 5,
                            DoluKoltukAdet = 25,
                            Kapasite = 60,
                            Name = "İzmirV2",
                            TrenId = 2
                        },
                        new
                        {
                            Id = 6,
                            DoluKoltukAdet = 50,
                            Kapasite = 90,
                            Name = "İzmirV3",
                            TrenId = 2
                        });
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.OturmaPlani", b =>
                {
                    b.HasOne("TrenRezervasyonAPI.Model.RezervasyonCevabi", null)
                        .WithMany("YerlesimAyrinti")
                        .HasForeignKey("RezervasyonCevabiId");
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.Vagon", b =>
                {
                    b.HasOne("TrenRezervasyonAPI.Model.Tren", "Tren")
                        .WithMany("Vagonlar")
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.RezervasyonCevabi", b =>
                {
                    b.Navigation("YerlesimAyrinti");
                });

            modelBuilder.Entity("TrenRezervasyonAPI.Model.Tren", b =>
                {
                    b.Navigation("Vagonlar");
                });
#pragma warning restore 612, 618
        }
    }
}
